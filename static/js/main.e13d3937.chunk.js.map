{"version":3,"sources":["components/Navbar.js","components/TextUtilsForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","htmlFor","onChange","HandleOnChnage","role","onClick","toggleMode","TextUtilsForm","useState","text","setText","style","color","heading","value","rows","backgroundColor","event","target","ToUpper","toUpperCase","showAlert","ToLower","toLowerCase","newText","split","join","navigator","clipboard","writeText","replace","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","messgae","App","setMode","setAlert","colors","setcolors","setTimeout","document","body","setInterval","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e13d3937.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/Abouts\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <label htmlFor=\"exampleColorInput\" className=\"form-label my-10\">Color picker</label>\r\n        <input type=\"color\" className=\"form-control form-control-color\" onChange={props.HandleOnChnage} id=\"exampleColorInput\"  title=\"Choose your color\">\r\n      </input>\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={title: PropTypes.string,\r\n    aboutText: PropTypes.string  }\r\n\r\n    \r\n// Navbar.propTypes={title: PropTypes.string.isRequired,\r\n//     aboutText: PropTypes.string  }\r\n\r\nNavbar.defaultProps={\r\n    title:'Text Utils',\r\n    aboutText: 'About us' \r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextUtilsForm(props) {\r\n   \r\n    const[text,setText]=useState('');\r\n\r\n    const HandleClickEvent=()=>{\r\n        let ToUpper=text.toUpperCase();\r\n        setText(ToUpper);\r\n        props.showAlert(\"Upper case done.\",\"success\");\r\n        //console.log(\"Click event handle\");\r\n    }\r\n    const HandleLowerClickEvent=()=>{\r\n        let ToLower=text.toLowerCase();\r\n        setText(ToLower);\r\n        props.showAlert(\"Lower case done.\",\"primary\");\r\n        //console.log(\"Click event handle\");\r\n    }\r\n    const HandleClearClickEvent=()=>{\r\n        setText('');\r\n        props.showAlert(\"Clear.\",\"danger\");\r\n        //console.log(\"Click event handle\");\r\n    }\r\n    const HandleOnChnage=(event)=>{\r\n        setText(event.target.value);\r\n        //console.log(\"Click on chnage event\");\r\n    }\r\n    const HandleCopyClickEvent=()=>{\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n    // const HandlePasteClickEvent=()=>{\r\n    //     const ctext =  navigator.clipboard.readText();\r\n    //      setText(ctext);   \r\n    // }\r\n    const HandleRemoveExtraSpacesClickEvent=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n         setText(newText.join(\" \"));   \r\n         \r\n    }\r\n   \r\n    \r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"myText\" className=\"form-label\">{props.heading}</label>\r\n                <textarea className=\"form-control\" value={text} id=\"myText\" rows=\"8\" style={{backgroundColor: props.mode==='light'?'white':'grey',color:props.mode==='light'?'black':'white'}} onChange={HandleOnChnage}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\"  onClick={HandleClickEvent}>Convert to upper case</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={HandleLowerClickEvent}>Convert to lower lower</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={HandleRemoveExtraSpacesClickEvent}>Remove Extra Spaces</button>\r\n            \r\n            <button className=\"btn btn-success mx-2\" onClick={HandleCopyClickEvent}>Copy to clipboard</button>\r\n            {/* <button className=\"btn btn-success mx-2\" onClick={HandlePasteClickEvent}>Paste Clipboard Data</button> */}\r\n            <button className=\"btn btn-danger mx-2\" onClick={HandleClearClickEvent}>Clear</button>\r\n            \r\n        </div>\r\n        <div className=\"container my3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p>{text === \"\" ?0: text.replace(/(^\\s*)|(\\s*$)/gi,\"\").replace(/[ ]{2,}/gi,\" \").replace(/\\n /,\"\\n\").split(\" \").length } words and {text.length} characters.</p>\r\n            <p>{ 0.008 * text.split(\" \").length } Mintues read.</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter something to preview'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert &&  <div>\r\n           <div className='container my-3'>   \r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)} </strong>{props.alert.messgae}\r\n                </div>\r\n            </div>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './Appa.css';\n// import Abouts from './components/Abouts';\nimport Navbar from './components/Navbar';\nimport TextUtilsForm from './components/TextUtilsForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes ,\n//   Route\n// } from 'react-router-dom';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null);\n  const [colors, setcolors] = useState(\"black\")\n  \n  const showAlert=(messgae,type)=>{\n      setAlert({\n        messgae : messgae,\n        type : type\n      });\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  const toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n    setMode('dark');\n    //document.body.style.backgroundColor='#909699';\n    document.body.style.backgroundColor=colors;\n    document.title='TextUtils - Darkmode'\n    showAlert(\"Dark mode has been enable\",\"success\");\n\n    setInterval(() => {\n    document.title='TextUtils - Darkmode'\n        }, 1000);\n    \n    setInterval(() => {\n      document.title='Install now'\n          }, 1500);\n      \n        }\n    else \n    {\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode has been enable\",\"success\");\n    document.title='TextUtils - Lightmode';\n    }\n  }\n    const HandleOnChnage=(event)=>{\n      setcolors(event.target.value);\n      console.log(event.target.value);\n      \n      //console.log(\"Click on chnage event\");\n  }\n\n  return (\n    <> \n     {/* <Router> */}\n   \n   <Navbar mode={mode} toggleMode={toggleMode} HandleOnChnage={HandleOnChnage} colors={colors}/>\n   <Alert alert={alert}></Alert>\n   <div className=\"container my-3\" >\n       \n        {/* <Routes>\n         <Route exact path='/Abouts' element={<Abouts/>} />\n         <Route  exact path='/'element={\n          <TextUtilsForm heading=\"Enter The Text to ananlyze below\"  mode={mode} showAlert={showAlert} />\n         }>\n          \n          </Route>\n        </Routes> */}\n       \n   </div>\n   \n   {/* </Router> */}\n   <TextUtilsForm heading=\"Enter The Text to ananlyze below\"  mode={mode} showAlert={showAlert} />\n   </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}